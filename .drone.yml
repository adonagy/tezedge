##############################################################################################################
# Drone contains these pipelines:
# - standalone-tests (just rust tests)
# - sandbox-inject-operation (runs sandboxed ocaml and rust nodes and checks p2p, rpc between them, using tezos_client)
# - integration-offline-tests (runs snapshoted local ocaml nodes and rust node)
# - connect-from-different-network-test (runs ocaml nodes and rust node)
##############################################################################################################
# Ocaml stuff is based on image tezos/tezos:v7.3 (if released new one, fell free to upgrade it here)
##############################################################################################################

##############################################################################################################
# This pipeline:
# - only one which checkouts git
# - runs just run tests, and build artifacts to 'build' volume,
# - aslo copies files needed from git for other pipelines
##############################################################################################################
kind: pipeline
name: build-and-tests

workspace:
  path: /drone/src

steps:
- name: cleanup-data
  image: alpine/git
  user: root
  volumes:
    - name: build
      path: /artifacts
    - name: sandbox-data
      path: /tmp/sandbox
    - name: tezos-src
      path: /tmp/tezos-src
  commands:
    - rm -rf /tmp/sandbox/light-node
    - rm -rf /tmp/sandbox/tezos-node
    - rm -rf /tmp/sandbox/tezos-client
    - rm -rf /home/tezos/data/
    - rm -rf /home/
    - rm -rf /tmp/tezos-src/*
    # - rm -rf /artifacts/*

- name: tmp1
  image: alpine/git
  user: root
  volumes:
    - name: build
      path: /artifacts
    - name: tezos-src
      path: /tmp/tezos-src
  commands:
    - git clone https://gitlab.com/tezos/tezos.git --branch v7.3 /tmp/tezos-src/tezos
    - cp ./tezos/python-tests/daemons/node.py /tmp/tezos-src/tezos/tests_python/daemons/node.py
    - cp ./tezos/python-tests/launchers/sandbox.py /tmp/tezos-src/tezos/tests_python/launchers/sandbox.py
    - cp ./tezos/python-tests/tests/test_basic.py /tmp/tezos-src/tezos/tests_python/tests/test_basic.py
    - cp ./tezos/python-tests/tests/test_mempool.py /tmp/tezos-src/tezos/tests_python/tests/test_mempool.py
    - cp ./tezos/python-tests/tools/constants.py /tmp/tezos-src/tezos/tests_python/tools/constants.py
    - cp ./tezos/python-tests/tools/utils.py /tmp/tezos-src/tezos/tests_python/tools/utils.py
    - cp ./tezos/python-tests/test-parameters.json /tmp/tezos-src/tezos/src/proto_alpha/parameters/test-parameters.json
    - cp ./tezos/python-tests/bin/tezos-client /tmp/tezos-src/tezos/tezos-client
    - cp ./tezos/python-tests/bin/tezos-admin-client /tmp/tezos-src/tezos/tezos-admin-client
    # - cp /artifacts/tezos-client /tmp/tezos-src/tezos/
    # - cp /artifacts/tezos-admin-client /tmp/tezos-src/tezos/
    - cp /artifacts/light-node /tmp/tezos-src/tezos/
    - cp /artifacts/protocol-runner /tmp/tezos-src/tezos/
    - cp /artifacts/ffi/libtezos.so /tmp/tezos-src/tezos/
    - cp ./light_node/etc/tezedge_sandbox/sandbox-patch-context.json /tmp/tezos-src/tezos/sandbox-patch-context.json

# - name: test-and-build-artifacts
#   image: simplestakingcom/tezedge-ci-builder:latest
#   user: root
#   volumes:
#     - name: build
#       path: /artifacts
#     - name: sandbox-data
#       path: /tmp/sandbox
#   environment:
#     RUST_BACKTRACE: 1
#     SODIUM_USE_PKG_CONFIG: 1
#     OCAML_BUILD_CHAIN: remote
#     LOG_LEVEL: info
#     OCAML_LOG_ENABLED: false
#   commands:
#     # prepare rust toolchain dir
#     - echo "`rustup show home`/toolchains/`rustup show active-toolchain | tr " " "\n" | head -1`/lib"
#     # build and test
#     - cargo build --release --workspace
#     - cargo test --release --workspace
#     # build and run special tests
#     - export LD_LIBRARY_PATH=./tezos/interop/lib_tezos/artifacts
#     - export PROTOCOL_RUNNER=/drone/src/target/release/protocol-runner
#     # - cargo test --package shell --release -- --nocapture --ignored test_mutliple_protocol_runners_with_one_write_multiple_read_init_context
#     # - cargo test --package shell --release -- --nocapture --ignored test_readonly_protocol_runner_connection_pool
#     # - cargo test --package shell --release -- --nocapture --ignored test_actors_apply_blocks_and_check_context_and_mempool
#     # - cargo test --package shell --release -- --nocapture --ignored test_process_current_branch_on_level3_with_empty_storage
#     # - cargo test --package shell --release -- --nocapture --ignored test_process_reorg_with_different_current_branches_with_empty_storage
#     # # build and run benches
#     # - cargo bench -- --nocapture
#     # - cargo bench --tests -- --nocapture
#     # collect binary artefacts
#     - mkdir /artifacts/ffi
#     - mkdir /artifacts/tezedge
#     - mkdir -p /artifacts/identities
#     - cp ./target/release/light-node /artifacts
#     - cp ./target/release/sandbox /artifacts
#     - cp ./target/release/protocol-runner /artifacts
#     - cp ./target/release/libtezos_interop_callback.so /artifacts/ffi
#     - cp ./tezos/interop/lib_tezos/artifacts/libtezos.so /artifacts/ffi
#     - cp ./sandbox/artifacts/tezos-client /artifacts
#     - cp ./sandbox/artifacts/tezos-admin-client /artifacts
#     - cp `find ./target/release/deps/ | grep integration_test | grep -v "\.d" | head -1` /artifacts/rpc_integration_test
#     - cp ./light_node/etc/tezedge_sandbox/sandbox-patch-context.json /tmp/sandbox/
#     - cp ./light_node/etc/tezedge_sandbox/006-carthage-protocol-parameters.json /tmp/sandbox/
#     - cp ./light_node/etc/tezedge_sandbox/tezedge_drone_sandbox.config /tmp/sandbox/
#     - cp ./light_node/etc/tezedge_sandbox/sandbox_start_light_node_args.json /tmp/sandbox/
#     - cp ./light_node/etc/tezedge_sandbox/sandbox_init_client_request.json /tmp/sandbox/
#     - cp ./light_node/etc/tezedge_sandbox/sandbox_activate_protocol_request.json /tmp/sandbox/
#     - cp ./light_node/etc/tezedge_sandbox/sandbox_bake_empty_block.json /tmp/sandbox/
#     - cp ./light_node/etc/drone/assert_equals.sh /artifacts/ && chmod 755 /artifacts/assert_equals.sh
#     - cp ./light_node/etc/drone/assert_contains.sh /artifacts/ && chmod 755 /artifacts/assert_contains.sh
#     - cp ./light_node/etc/drone/identities/* /artifacts/identities/
#     - cp ./light_node/etc/tezedge/tezedge_drone.config /artifacts/tezedge/
#     - exit 1

volumes:
  - name: build
    host:
      path: /etc/tezedge-ci-build/
  - name: tezos-src
    host:
      path: /etc/tezos-src
  - name: sandbox-data
    host:
      path: /etc/tezedge-ci-data/sandbox

trigger:
  branch:
    - master
    - develop

##############################################################################################################
# This pipeline test the sandbox and its rpc sercver
##############################################################################################################
---
kind: pipeline
name: tezos-python-test

clone:
  disable: true

environment:
  SODIUM_USE_PKG_CONFIG: 1
  NETWORK: sandbox

steps:
# - name: prepare-python-tests
#   image: simplestakingcom/tezedge-ci-builder:tmp-python
#   pull: if-not-exists
#   user: root
#   volumes:
#     - name: build
#       path: /artifacts
#     - name: tezos-src
#       path: /tmp/tezos-src
#   commands:
#     - git clone https://gitlab.com/tezos/tezos.git --branch v8.0-rc1 tezos-src/tezos

# Prepares test files to be compatible with the tezedge node
# - name: prepare-test-files
#   image: simplestakingcom/tezedge-ci-builder:tmp-python
#   pull: if-not-exists
#   user: root
#   volumes:
#     - name: build
#       path: /artifacts
#     - name: tezos-src
#       path: /tmp/tezos-src
#   environment:
#     SODIUM_USE_PKG_CONFIG: 1
#     RUST_BACKTRACE: 1
#   commands:
#     - cp /drone/src/tezos/python-tests/daemons/node.py tezos-src/tezos/tests_python/daemons/node.py
#     - cp /drone/src/tezos/python-tests/daemons/node.py tezos-src/tezos/tests_python/launchers/node.py
#     - cp /drone/src/tezos/python-tests/daemons/node.py tezos-src/tezos/tests_python/tests/tests/test_basic.py
#     - cp /drone/src/tezos/python-tests/daemons/node.py tezos-src/tezos/tests_python/tests/tests/test_mempool.py
#     - cp /drone/src/tezos/python-tests/daemons/node.py tezos-src/tezos/tests_python/tests/tools/constants.py
#     - cp /drone/src/tezos/python-tests/daemons/node.py tezos-src/tezos/tests_python/tests/tools/utils.py
#     - cp /artifacts/light-node tezos-src/tezos/
#     - cp /artifacts/protocol-runner tezos-src/tezos/
#     - cp /artifacts/ffi/libtezos.so tezos-src/tezos/

- name: run-python-tests
  image: simplestakingcom/tezedge-ci-builder:tmp-python
  pull: if-not-exists
  user: root
  failure: ignore
  volumes:
    - name: build
      path: /artifacts
    - name: tezos-src
      path: /tmp/tezos-src
  environment:
    SODIUM_USE_PKG_CONFIG: 1
    RUST_BACKTRACE: 1
  commands:
    - pyenv global 3.8.2
    - pwd && ls -la ../../tmp
    - cd /tmp/tezos-src/tezos/tests_python && poetry install && poetry run pytest -s --log-dir=. tests/test_mempool.py

# - name: DBG-print-node-log
#   image: simplestakingcom/tezedge-ci-builder:tmp-python
#   pull: if-not-exists
#   user: root
#   volumes:
#     - name: build
#       path: /artifacts
#     - name: tezos-src
#       path: /tmp/tezos-src
#   commands:
#     - cd /tmp/tezos-src/tezos/tests_python && cat node0_0.txt

volumes:
  - name: build
    host:
      path: /etc/tezedge-ci-build/
  - name: tezos-src
    host:
      path: /etc/tezos-src

trigger:
  branch:
    - develop

depends_on:
  - build-and-tests 